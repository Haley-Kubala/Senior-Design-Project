validation_step.py

import re
import argparse
import store
import pickle


def main(args):
    get_id_and_time(file)
    validate_returning_id(ID)
    
def return_id_and_time(file):
#get the id and timestamp and store it
    with open('file.txt', 'r') as searchfile:
    for line in searchfile:
        info_list = line.split(" ")
        #split line of data into two and assign each value to a variable
        ID = info_list[1]
        #get the id from args
        time_stamp = info_list[2]
        #get the time stamp from args
        with open('information.pickle', 'w') as f: 
            pickle.dump([ID, time_stamp], f)
            #this should save the ID and the time_stamp to a tuple

        #with open('information.pickle') as f: 
        #ID, time_stamp = pickle.load(f)
        return ID, time_stamp
        
def validate_returning_id(ID):
           # check the args id
        if ID == args:
           return true
           # compare ids
        else:
            return false
# print valdiate_returing_id()
def is_id_trash():
   
    if validate_returning_id() == true:
        #call David's script to move forward in the validation process, I think. 
    elif validate_returning_id() == false:
        return "INVALID ID, PLEASE RE-ENTER"
        #if the script that tests whether the IDs match returns false, this script will prompt the user to re enter ID
        #If it does return false, I think this is where it would call one of David's functions
        #prompting the user to re-enter their ID
    
if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("ID", help="student ID must match the one in the file")
    args = vars(parser.parse_args())
    main(args)
